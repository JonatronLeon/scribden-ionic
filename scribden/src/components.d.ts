/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ItemType, } from "./interfaces/item";
export namespace Components {
    interface AppRoot {
    }
    interface CheckList {
        "item": ItemType;
    }
    interface ChecklistPage {
        "itemId": string;
    }
    interface ForgotPasswordPage {
    }
    interface ItemDetailPage {
        "itemId": string;
    }
    interface ItemListItem {
        "item": ItemType;
    }
    interface ItemListPage {
    }
    interface LoginPage {
    }
    interface NoteEditor {
        "itemId": string;
    }
    interface NotePage {
        "itemId": string;
    }
    interface QuickAdd {
        "add": Function;
        "label": string;
    }
    interface RegisterPage {
    }
    interface ReminderForm {
        "item": ItemType;
    }
    interface ReminderPage {
        "itemId": string;
    }
    interface TagForm {
        "item": ItemType;
    }
    interface TagPage {
        "itemId": string;
    }
}
declare global {
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLCheckListElement extends Components.CheckList, HTMLStencilElement {
    }
    var HTMLCheckListElement: {
        prototype: HTMLCheckListElement;
        new (): HTMLCheckListElement;
    };
    interface HTMLChecklistPageElement extends Components.ChecklistPage, HTMLStencilElement {
    }
    var HTMLChecklistPageElement: {
        prototype: HTMLChecklistPageElement;
        new (): HTMLChecklistPageElement;
    };
    interface HTMLForgotPasswordPageElement extends Components.ForgotPasswordPage, HTMLStencilElement {
    }
    var HTMLForgotPasswordPageElement: {
        prototype: HTMLForgotPasswordPageElement;
        new (): HTMLForgotPasswordPageElement;
    };
    interface HTMLItemDetailPageElement extends Components.ItemDetailPage, HTMLStencilElement {
    }
    var HTMLItemDetailPageElement: {
        prototype: HTMLItemDetailPageElement;
        new (): HTMLItemDetailPageElement;
    };
    interface HTMLItemListItemElement extends Components.ItemListItem, HTMLStencilElement {
    }
    var HTMLItemListItemElement: {
        prototype: HTMLItemListItemElement;
        new (): HTMLItemListItemElement;
    };
    interface HTMLItemListPageElement extends Components.ItemListPage, HTMLStencilElement {
    }
    var HTMLItemListPageElement: {
        prototype: HTMLItemListPageElement;
        new (): HTMLItemListPageElement;
    };
    interface HTMLLoginPageElement extends Components.LoginPage, HTMLStencilElement {
    }
    var HTMLLoginPageElement: {
        prototype: HTMLLoginPageElement;
        new (): HTMLLoginPageElement;
    };
    interface HTMLNoteEditorElement extends Components.NoteEditor, HTMLStencilElement {
    }
    var HTMLNoteEditorElement: {
        prototype: HTMLNoteEditorElement;
        new (): HTMLNoteEditorElement;
    };
    interface HTMLNotePageElement extends Components.NotePage, HTMLStencilElement {
    }
    var HTMLNotePageElement: {
        prototype: HTMLNotePageElement;
        new (): HTMLNotePageElement;
    };
    interface HTMLQuickAddElement extends Components.QuickAdd, HTMLStencilElement {
    }
    var HTMLQuickAddElement: {
        prototype: HTMLQuickAddElement;
        new (): HTMLQuickAddElement;
    };
    interface HTMLRegisterPageElement extends Components.RegisterPage, HTMLStencilElement {
    }
    var HTMLRegisterPageElement: {
        prototype: HTMLRegisterPageElement;
        new (): HTMLRegisterPageElement;
    };
    interface HTMLReminderFormElement extends Components.ReminderForm, HTMLStencilElement {
    }
    var HTMLReminderFormElement: {
        prototype: HTMLReminderFormElement;
        new (): HTMLReminderFormElement;
    };
    interface HTMLReminderPageElement extends Components.ReminderPage, HTMLStencilElement {
    }
    var HTMLReminderPageElement: {
        prototype: HTMLReminderPageElement;
        new (): HTMLReminderPageElement;
    };
    interface HTMLTagFormElement extends Components.TagForm, HTMLStencilElement {
    }
    var HTMLTagFormElement: {
        prototype: HTMLTagFormElement;
        new (): HTMLTagFormElement;
    };
    interface HTMLTagPageElement extends Components.TagPage, HTMLStencilElement {
    }
    var HTMLTagPageElement: {
        prototype: HTMLTagPageElement;
        new (): HTMLTagPageElement;
    };
    interface HTMLElementTagNameMap {
        "app-root": HTMLAppRootElement;
        "check-list": HTMLCheckListElement;
        "checklist-page": HTMLChecklistPageElement;
        "forgot-password-page": HTMLForgotPasswordPageElement;
        "item-detail-page": HTMLItemDetailPageElement;
        "item-list-item": HTMLItemListItemElement;
        "item-list-page": HTMLItemListPageElement;
        "login-page": HTMLLoginPageElement;
        "note-editor": HTMLNoteEditorElement;
        "note-page": HTMLNotePageElement;
        "quick-add": HTMLQuickAddElement;
        "register-page": HTMLRegisterPageElement;
        "reminder-form": HTMLReminderFormElement;
        "reminder-page": HTMLReminderPageElement;
        "tag-form": HTMLTagFormElement;
        "tag-page": HTMLTagPageElement;
    }
}
declare namespace LocalJSX {
    interface AppRoot {
    }
    interface CheckList {
        "item"?: ItemType;
    }
    interface ChecklistPage {
        "itemId"?: string;
    }
    interface ForgotPasswordPage {
    }
    interface ItemDetailPage {
        "itemId"?: string;
    }
    interface ItemListItem {
        "item"?: ItemType;
    }
    interface ItemListPage {
    }
    interface LoginPage {
    }
    interface NoteEditor {
        "itemId"?: string;
    }
    interface NotePage {
        "itemId"?: string;
    }
    interface QuickAdd {
        "add"?: Function;
        "label"?: string;
    }
    interface RegisterPage {
    }
    interface ReminderForm {
        "item"?: ItemType;
    }
    interface ReminderPage {
        "itemId"?: string;
    }
    interface TagForm {
        "item"?: ItemType;
    }
    interface TagPage {
        "itemId"?: string;
    }
    interface IntrinsicElements {
        "app-root": AppRoot;
        "check-list": CheckList;
        "checklist-page": ChecklistPage;
        "forgot-password-page": ForgotPasswordPage;
        "item-detail-page": ItemDetailPage;
        "item-list-item": ItemListItem;
        "item-list-page": ItemListPage;
        "login-page": LoginPage;
        "note-editor": NoteEditor;
        "note-page": NotePage;
        "quick-add": QuickAdd;
        "register-page": RegisterPage;
        "reminder-form": ReminderForm;
        "reminder-page": ReminderPage;
        "tag-form": TagForm;
        "tag-page": TagPage;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "check-list": LocalJSX.CheckList & JSXBase.HTMLAttributes<HTMLCheckListElement>;
            "checklist-page": LocalJSX.ChecklistPage & JSXBase.HTMLAttributes<HTMLChecklistPageElement>;
            "forgot-password-page": LocalJSX.ForgotPasswordPage & JSXBase.HTMLAttributes<HTMLForgotPasswordPageElement>;
            "item-detail-page": LocalJSX.ItemDetailPage & JSXBase.HTMLAttributes<HTMLItemDetailPageElement>;
            "item-list-item": LocalJSX.ItemListItem & JSXBase.HTMLAttributes<HTMLItemListItemElement>;
            "item-list-page": LocalJSX.ItemListPage & JSXBase.HTMLAttributes<HTMLItemListPageElement>;
            "login-page": LocalJSX.LoginPage & JSXBase.HTMLAttributes<HTMLLoginPageElement>;
            "note-editor": LocalJSX.NoteEditor & JSXBase.HTMLAttributes<HTMLNoteEditorElement>;
            "note-page": LocalJSX.NotePage & JSXBase.HTMLAttributes<HTMLNotePageElement>;
            "quick-add": LocalJSX.QuickAdd & JSXBase.HTMLAttributes<HTMLQuickAddElement>;
            "register-page": LocalJSX.RegisterPage & JSXBase.HTMLAttributes<HTMLRegisterPageElement>;
            "reminder-form": LocalJSX.ReminderForm & JSXBase.HTMLAttributes<HTMLReminderFormElement>;
            "reminder-page": LocalJSX.ReminderPage & JSXBase.HTMLAttributes<HTMLReminderPageElement>;
            "tag-form": LocalJSX.TagForm & JSXBase.HTMLAttributes<HTMLTagFormElement>;
            "tag-page": LocalJSX.TagPage & JSXBase.HTMLAttributes<HTMLTagPageElement>;
        }
    }
}
